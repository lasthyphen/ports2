import { NextApiRequest, NextApiResponse } from 'next';
declare type SwaggerOptions = {
    openApiVersion?: string;
    apiFolder?: string;
    title: string;
    version: string;
};
/**
 * Create swagger JSON
 * @param options.openApiVersion Open API version {3.0.0}
 * @param options.apiFolder NextJS API folder {pages/api}
 * @param options.title Title
 * @param options.version Version
 * @returns Swagger JSON Spec
 *
 * @example
 * createSwaggerSpec({
 *  openApiVersion: '3.0.0',
 *  apiFolder:  'pages/api',
 *  title: 'Demo Api',
 *  version: '1.0',
 * })
 */
export declare function createSwaggerSpec({ openApiVersion, apiFolder, title, version, }: SwaggerOptions): object;
/**
 * withSwagger middleware
 * @param options.openApiVersion Open API version {3.0.0}
 * @param options.apiFolder NextJS API folder {pages/api}
 * @param options.title Title
 * @param options.version Version
 * @returns
 *
 * @example
 * createSwaggerSpec({
 *  openApiVersion: '3.0.0',
 *  apiFolder:  'pages/api',
 *  title: 'Demo Api',
 *  version: '1.0',
 * })
 */
export declare function withSwagger({ openApiVersion, apiFolder, title, version, }: SwaggerOptions): () => (_req: NextApiRequest, res: NextApiResponse) => void;
export {};
