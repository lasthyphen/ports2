{"version":3,"file":"next-swagger-doc.esm.js","sources":["../src/with-swagger.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport { join } from 'path';\n\nimport swaggerJsdoc from 'swagger-jsdoc';\n\ntype SwaggerOptions = {\n  openApiVersion?: string;\n  apiFolder?: string;\n  title: string;\n  version: string;\n};\n\n/**\n * Create swagger JSON\n * @param options.openApiVersion Open API version {3.0.0}\n * @param options.apiFolder NextJS API folder {pages/api}\n * @param options.title Title\n * @param options.version Version\n * @returns Swagger JSON Spec\n *\n * @example\n * createSwaggerSpec({\n *  openApiVersion: '3.0.0',\n *  apiFolder:  'pages/api',\n *  title: 'Demo Api',\n *  version: '1.0',\n * })\n */\nexport function createSwaggerSpec({\n  openApiVersion = '3.0.0',\n  apiFolder = 'pages/api',\n  title,\n  version,\n}: SwaggerOptions) {\n  const apiDirectory = join(process.cwd(), apiFolder);\n  const buildApiDirectory = join(process.cwd(), '.next/server', apiFolder);\n\n  const options = {\n    definition: {\n      openapi: openApiVersion,\n      info: {\n        title,\n        version,\n      },\n    },\n    apis: [\n      `${apiDirectory}/**/*.js`,\n      `${apiDirectory}/**/*.ts`,\n      `${apiDirectory}/**/*.tsx`,\n      `${buildApiDirectory}/**/*.js`,\n    ], // files containing annotations as above\n  };\n\n  return swaggerJsdoc(options);\n}\n\n/**\n * withSwagger middleware\n * @param options.openApiVersion Open API version {3.0.0}\n * @param options.apiFolder NextJS API folder {pages/api}\n * @param options.title Title\n * @param options.version Version\n * @returns\n *\n * @example\n * createSwaggerSpec({\n *  openApiVersion: '3.0.0',\n *  apiFolder:  'pages/api',\n *  title: 'Demo Api',\n *  version: '1.0',\n * })\n */\nexport function withSwagger({\n  openApiVersion = '3.0.0',\n  apiFolder = 'pages/api',\n  title,\n  version,\n}: SwaggerOptions) {\n  return () => {\n    return (_req: NextApiRequest, res: NextApiResponse) => {\n      try {\n        const swaggerSpec = createSwaggerSpec({\n          openApiVersion,\n          apiFolder,\n          title,\n          version,\n        });\n        res.status(200).send(swaggerSpec);\n      } catch (error) {\n        res.status(400).send(error);\n      }\n    };\n  };\n}\n"],"names":["createSwaggerSpec","openApiVersion","apiFolder","title","version","apiDirectory","join","process","cwd","buildApiDirectory","options","definition","openapi","info","apis","swaggerJsdoc","withSwagger","_req","res","swaggerSpec","status","send","error"],"mappings":";;;AAYA;;;;;;;;;;;;;;;;;SAgBgBA;iCACdC;MAAAA,kDAAiB;4BACjBC;MAAAA,wCAAY;MACZC,aAAAA;MACAC,eAAAA;AAEA,MAAMC,YAAY,GAAGC,IAAI,CAACC,OAAO,CAACC,GAAR,EAAD,EAAgBN,SAAhB,CAAzB;AACA,MAAMO,iBAAiB,GAAGH,IAAI,CAACC,OAAO,CAACC,GAAR,EAAD,EAAgB,cAAhB,EAAgCN,SAAhC,CAA9B;AAEA,MAAMQ,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAEX,cADC;AAEVY,MAAAA,IAAI,EAAE;AACJV,QAAAA,KAAK,EAALA,KADI;AAEJC,QAAAA,OAAO,EAAPA;AAFI;AAFI,KADE;AAQdU,IAAAA,IAAI,EAAE,CACDT,YADC,eAEDA,YAFC,eAGDA,YAHC,gBAIDI,iBAJC;AARQ,GAAhB;AAgBA,SAAOM,YAAY,CAACL,OAAD,CAAnB;AACD;AAED;;;;;;;;;;;;;;;;;SAgBgBM;mCACdf;MAAAA,mDAAiB;8BACjBC;MAAAA,yCAAY;MACZC,cAAAA;MACAC,gBAAAA;AAEA,SAAO;AACL,WAAO,UAACa,IAAD,EAAuBC,GAAvB;AACL,UAAI;AACF,YAAMC,WAAW,GAAGnB,iBAAiB,CAAC;AACpCC,UAAAA,cAAc,EAAdA,cADoC;AAEpCC,UAAAA,SAAS,EAATA,SAFoC;AAGpCC,UAAAA,KAAK,EAALA,KAHoC;AAIpCC,UAAAA,OAAO,EAAPA;AAJoC,SAAD,CAArC;AAMAc,QAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,WAArB;AACD,OARD,CAQE,OAAOG,KAAP,EAAc;AACdJ,QAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,KAArB;AACD;AACF,KAZD;AAaD,GAdD;AAeD;;;;"}