import { join } from 'path';
import swaggerJsdoc from 'swagger-jsdoc';

/**
 * Create swagger JSON
 * @param options.openApiVersion Open API version {3.0.0}
 * @param options.apiFolder NextJS API folder {pages/api}
 * @param options.title Title
 * @param options.version Version
 * @returns Swagger JSON Spec
 *
 * @example
 * createSwaggerSpec({
 *  openApiVersion: '3.0.0',
 *  apiFolder:  'pages/api',
 *  title: 'Demo Api',
 *  version: '1.0',
 * })
 */

function createSwaggerSpec(_ref) {
  var _ref$openApiVersion = _ref.openApiVersion,
      openApiVersion = _ref$openApiVersion === void 0 ? '3.0.0' : _ref$openApiVersion,
      _ref$apiFolder = _ref.apiFolder,
      apiFolder = _ref$apiFolder === void 0 ? 'pages/api' : _ref$apiFolder,
      title = _ref.title,
      version = _ref.version;
  var apiDirectory = join(process.cwd(), apiFolder);
  var buildApiDirectory = join(process.cwd(), '.next/server', apiFolder);
  var options = {
    definition: {
      openapi: openApiVersion,
      info: {
        title: title,
        version: version
      }
    },
    apis: [apiDirectory + "/**/*.js", apiDirectory + "/**/*.ts", apiDirectory + "/**/*.tsx", buildApiDirectory + "/**/*.js"]
  };
  return swaggerJsdoc(options);
}
/**
 * withSwagger middleware
 * @param options.openApiVersion Open API version {3.0.0}
 * @param options.apiFolder NextJS API folder {pages/api}
 * @param options.title Title
 * @param options.version Version
 * @returns
 *
 * @example
 * createSwaggerSpec({
 *  openApiVersion: '3.0.0',
 *  apiFolder:  'pages/api',
 *  title: 'Demo Api',
 *  version: '1.0',
 * })
 */

function withSwagger(_ref2) {
  var _ref2$openApiVersion = _ref2.openApiVersion,
      openApiVersion = _ref2$openApiVersion === void 0 ? '3.0.0' : _ref2$openApiVersion,
      _ref2$apiFolder = _ref2.apiFolder,
      apiFolder = _ref2$apiFolder === void 0 ? 'pages/api' : _ref2$apiFolder,
      title = _ref2.title,
      version = _ref2.version;
  return function () {
    return function (_req, res) {
      try {
        var swaggerSpec = createSwaggerSpec({
          openApiVersion: openApiVersion,
          apiFolder: apiFolder,
          title: title,
          version: version
        });
        res.status(200).send(swaggerSpec);
      } catch (error) {
        res.status(400).send(error);
      }
    };
  };
}

export { createSwaggerSpec, withSwagger };
//# sourceMappingURL=next-swagger-doc.esm.js.map
