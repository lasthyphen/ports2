Object.defineProperty(exports,"__esModule",{value:!0});var e=require("graphql"),n=!1,a=!1,t=!1,r=!1,i={kind:"SCALAR",name:"Any"};function s(e){switch(e.kind){case"NON_NULL":case"LIST":return{kind:e.kind,ofType:s(e.ofType)};case"SCALAR":return r=r||n,n?e:i;case"INPUT_OBJECT":return r=r||t,t?e:i;case"ENUM":return r=r||a,a?e:i;case"OBJECT":case"INTERFACE":case"UNION":return e;default:throw new TypeError("Unrecognized type reference of type: "+e.kind+".")}}function u(e){switch(e.kind){case"SCALAR":return{kind:"SCALAR",name:e.name};case"ENUM":return{kind:"ENUM",name:e.name,enumValues:e.enumValues.map((function(e){return{name:e.name}}))};case"INPUT_OBJECT":return{kind:"INPUT_OBJECT",name:e.name,inputFields:e.inputFields.map((function(e){return{name:e.name,type:s(e.type),defaultValue:e.defaultValue||void 0}}))};case"OBJECT":return{kind:"OBJECT",name:e.name,fields:e.fields.map((function(e){return{name:e.name,type:e.type&&s(e.type),args:e.args&&e.args.map((function(e){return{name:e.name,type:s(e.type)}}))}})),interfaces:e.interfaces&&e.interfaces.map((function(e){return{kind:"INTERFACE",name:e.name}}))};case"INTERFACE":return{kind:"INTERFACE",name:e.name,fields:e.fields.map((function(e){return{name:e.name,type:e.type&&s(e.type),args:e.args&&e.args.map((function(e){return{name:e.name,type:s(e.type)}}))}})),interfaces:e.interfaces&&e.interfaces.map((function(e){return{kind:"INTERFACE",name:e.name}})),possibleTypes:e.possibleTypes&&e.possibleTypes.map((function(e){return{kind:e.kind,name:e.name}}))};case"UNION":return{kind:"UNION",name:e.name,possibleTypes:e.possibleTypes.map((function(e){return{kind:e.kind,name:e.name}}))};default:return e}}exports.getIntrospectedSchema=function(n){if("string"==typeof n)try{n=JSON.parse(n)}catch(a){n=e.buildSchema(n)}if("object"==typeof n&&"__schema"in n)return n;var a=e.execute({document:e.parse(e.getIntrospectionQuery({descriptions:!1})),schema:n});if(!a.data||!a.data.__schema)throw new TypeError("GraphQL could not generate an IntrospectionQuery from the given schema.");return a.data},exports.minifyIntrospectionQuery=function(e,c){if(void 0===c&&(c={}),!e||!("__schema"in e))throw new TypeError("Expected to receive an IntrospectionQuery.");r=!1,n=!!c.includeScalars,a=!!c.includeEnums,t=!!c.includeInputs;var p=e.__schema,m=p.queryType,o=p.mutationType,d=p.subscriptionType,f=p.directives,y=p.types.filter((function(e){switch(e.name){case"__Directive":case"__DirectiveLocation":case"__EnumValue":case"__InputValue":case"__Field":case"__Type":case"__TypeKind":case"__Schema":return!1;default:return n&&"SCALAR"===e.kind||a&&"ENUM"===e.kind||t&&"INPUT_OBJECT"===e.kind||"OBJECT"===e.kind||"INTERFACE"===e.kind||"UNION"===e.kind}})).map(u),l=(f||[]).map((function(e){return{name:e.name,isRepeatable:!!e.isRepeatable||void 0,locations:e.locations,args:e.args.map((function(e){return{name:e.name,type:s(e.type),defaultValue:e.defaultValue||void 0}}))}}));return n&&a&&t&&!r||y.push({kind:"SCALAR",name:i.name}),{__schema:{queryType:m,mutationType:o,subscriptionType:d,types:y,directives:c.includeDirectives?l:[]}}};
//# sourceMappingURL=urql-introspection.min.js.map
