import { BaseProvider } from '@ethersproject/providers';
import { BaseError, getImageURI, parseNFT, resolveURI } from './utils';
export interface Spec {
    getMetadata: (provider: BaseProvider, ownerAddress: string | undefined | null, contractAddress: string, tokenID: string) => Promise<any>;
}
export declare const specs: {
    [key: string]: new () => Spec;
};
export interface UnsupportedNamespace {
}
export declare class UnsupportedNamespace extends BaseError {
}
interface AvatarRequestOpts {
    jsdomWindow?: any;
}
interface AvatarResolverOpts {
    cache?: number;
    ipfs?: string;
}
export interface AvatarResolver {
    provider: BaseProvider;
    options?: AvatarResolverOpts;
    getAvatar(ens: string, data: AvatarRequestOpts): Promise<string | null>;
    getMetadata(ens: string): Promise<any | null>;
}
export declare class AvatarResolver implements AvatarResolver {
    constructor(provider: BaseProvider, options?: AvatarResolverOpts);
}
export declare const utils: {
    getImageURI: typeof getImageURI;
    parseNFT: typeof parseNFT;
    resolveURI: typeof resolveURI;
};
export {};
